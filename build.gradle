buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

version = "${minecraftVersion}-" + getVersion()
group = modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.minecraftVersion + "-" + project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion


    replace "@VERSION@", "${modVersion}"
    replaceIn "PackMode.java"
}

repositories {
    mavenCentral()
    maven {
        name 'CraftTweaker'
        url 'http://maven.blamejared.com'
    }
    maven {
        name "GameStages"
        url "https://maven.mcmoddev.com"
    }
}

dependencies {
    deobfCompile "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${crafttweakerVersion}"
    deobfCompile("net.darkhax.gamestages:GameStages-1.12.2:${gameStageVersion}") {
        exclude module: "crafttweaker"
    }
    deobfCompile "net.darkhax.bookshelf:Bookshelf-1.12.2:${bookShelfVersion}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

apply plugin: "maven"


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + (System.getenv("local_maven") != null ? System.getenv("local_maven") : System.getenv("bamboo_local_maven")))
        }
    }
}

String getVersion() {
    String version = "${modVersion}"
    String branch = project.hasProperty("branch") ? project.branch : ""

    if(branch != "") {
        version += "-" + branch

        String buildNumber = getBuildNumber()
        if(buildNumber != "") {
            version += "." + buildNumber
        }
    }

    return version
}

static String getBuildNumber() {
    String buildNumber = System.getenv("BUILD_NUMBER") != null ? System.getenv("BUILD_NUMBER") : ""
    if(buildNumber == "") {
        buildNumber = System.getenv("bamboo_buildNumber") != null ? "." + System.getenv("bamboo_buildNumber") : ""
    }
    return buildNumber
}
